{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikeS\\\\OneDrive\\\\Bureau\\\\react typescript todo\\\\modern-todo-app\\\\src\\\\components\\\\TodoList\\\\TodoList.tsx\";\n// TodoList.tsx\nimport React from 'react';\nimport './TodoList.scss'; // Import the SASS styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos,\n  settodos\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.filter(item => item.todo !== \"\").map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.todo\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TodoList","todos","settodos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","todo","map","id","_c","$RefreshReg$"],"sources":["C:/Users/mikeS/OneDrive/Bureau/react typescript todo/modern-todo-app/src/components/TodoList/TodoList.tsx"],"sourcesContent":["// TodoList.tsx\r\nimport React from 'react';\r\nimport './TodoList.scss'; // Import the SASS styles\r\n\r\ninterface Props {\r\n  todos: Todo[];\r\n  settodos: React.Dispatch<React.SetStateAction<Todo[]>>;\r\n}\r\n\r\nconst TodoList: React.FC<Props> = ({ todos, settodos }) => {\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      <h2>Todo List:</h2>\r\n      <ul>\r\n        {todos\r\n          .filter((item) => item.todo !== \"\")\r\n          .map((item) => (\r\n            <li key={item.id}>{item.todo}</li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,QAAyB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACzD,oBACEH,OAAA;IAAKI,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCL,OAAA;MAAAK,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBT,OAAA;MAAAK,QAAA,EACGH,KAAK,CACHQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,EAAE,CAAC,CAClCC,GAAG,CAAEF,IAAI,iBACRX,OAAA;QAAAK,QAAA,EAAmBM,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACM,EAAA,GAbId,QAAyB;AAe/B,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}