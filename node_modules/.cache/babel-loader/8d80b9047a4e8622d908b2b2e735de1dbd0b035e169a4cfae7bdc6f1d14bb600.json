{"ast":null,"code":"import _toConsumableArray from\"C:/Users/mikeS/OneDrive/Bureau/react typescript todo/modern-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/mikeS/OneDrive/Bureau/react typescript todo/modern-todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./App.scss';import InputField from'./components/InputField.tsx/InputField';import TodoList from'./components/TodoList/TodoList';//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],settodo=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),todos=_useState4[0],settodos=_useState4[1];useEffect(function(){var storedTodos=localStorage.getItem(\"todos\");if(storedTodos){settodos(JSON.parse(storedTodos));}},[]);var handleAdd=function handleAdd(e){e.preventDefault();var updatedTodos=[].concat(_toConsumableArray(todos),[{id:todos.length>0?todos[todos.length-1].id+1:1,todo:todo,isDone:false}]);settodos(updatedTodos);// Save to local storage\nlocalStorage.setItem('todos',JSON.stringify(updatedTodos));settodo(\"\");};console.log(todos);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Taskify\"}),/*#__PURE__*/_jsx(InputField,{todo:todo,settodo:settodo,handleAdd:handleAdd}),/*#__PURE__*/_jsx(TodoList,{todos:todos,settodos:settodos})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","InputField","TodoList","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","todo","settodo","_useState3","_useState4","todos","settodos","storedTodos","localStorage","getItem","JSON","parse","handleAdd","e","preventDefault","updatedTodos","concat","_toConsumableArray","id","length","isDone","setItem","stringify","console","log","className","children"],"sources":["C:/Users/mikeS/OneDrive/Bureau/react typescript todo/modern-todo-app/src/App.tsx"],"sourcesContent":["import React,{useEffect, useState} from 'react';\nimport './App.scss';\nimport InputField from './components/InputField.tsx/InputField';\nimport { Todo } from './model';\nimport TodoList from './components/TodoList/TodoList';\n\n//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\n\n\nconst App: React.FC = () => {\n  const [todo, settodo] = useState<string>(\"\");\n  const [todos, settodos] = useState<Todo[]>([])\n  \n  useEffect(() => {\n    const storedTodos = localStorage.getItem(\"todos\");\n    if (storedTodos) {\n      settodos(JSON.parse(storedTodos));\n    }\n  }, [])\n  \n  const handleAdd = (e: React.FormEvent<HTMLFormElement>) =>{\n    e.preventDefault();\n    const updatedTodos = [...todos, {id: todos.length > 0 ? todos[todos.length - 1].id + 1 : 1, todo, isDone: false}]\n    settodos(updatedTodos);\n    // Save to local storage\n    localStorage.setItem('todos', JSON.stringify(updatedTodos));\n    settodo(\"\");\n  }\n  console.log(todos);\n  \n\n  return (\n    <div className=\"App\">\n    <h1>Taskify</h1>\n    <InputField todo={todo} settodo={settodo} handleAdd={handleAdd}/>\n    <TodoList todos={todos} settodos={settodos}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"4TAAA,MAAO,CAAAA,KAAK,EAAEC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAC/C,MAAO,YAAY,CACnB,MAAO,CAAAC,UAAU,KAAM,wCAAwC,CAE/D,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CAErD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGA,GAAM,CAAAC,GAAa,CAAG,QAAhB,CAAAA,GAAaA,CAAA,CAAS,CAC1B,IAAAC,SAAA,CAAwBR,QAAQ,CAAS,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA0Bb,QAAQ,CAAS,EAAE,CAAC,CAAAc,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtBf,SAAS,CAAC,UAAM,CACd,GAAM,CAAAkB,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,GAAIF,WAAW,CAAE,CACfD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC,CACnC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAK,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,CAAmC,CAAI,CACxDA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAM,CAAAC,YAAY,IAAAC,MAAA,CAAAC,kBAAA,CAAOZ,KAAK,GAAE,CAACa,EAAE,CAAEb,KAAK,CAACc,MAAM,CAAG,CAAC,CAAGd,KAAK,CAACA,KAAK,CAACc,MAAM,CAAG,CAAC,CAAC,CAACD,EAAE,CAAG,CAAC,CAAG,CAAC,CAAEjB,IAAI,CAAJA,IAAI,CAAEmB,MAAM,CAAE,KAAK,CAAC,EAAC,CACjHd,QAAQ,CAACS,YAAY,CAAC,CACtB;AACAP,YAAY,CAACa,OAAO,CAAC,OAAO,CAAEX,IAAI,CAACY,SAAS,CAACP,YAAY,CAAC,CAAC,CAC3Db,OAAO,CAAC,EAAE,CAAC,CACb,CAAC,CACDqB,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC,CAGlB,mBACET,KAAA,QAAK6B,SAAS,CAAC,KAAK,CAAAC,QAAA,eACpBhC,IAAA,OAAAgC,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBhC,IAAA,CAACH,UAAU,EAACU,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAACU,SAAS,CAAEA,SAAU,CAAC,CAAC,cACjElB,IAAA,CAACF,QAAQ,EAACa,KAAK,CAAEA,KAAM,CAACC,QAAQ,CAAEA,QAAS,CAAC,CAAC,EACxC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}