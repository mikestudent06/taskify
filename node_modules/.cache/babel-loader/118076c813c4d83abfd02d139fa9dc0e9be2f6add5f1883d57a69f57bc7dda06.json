{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikeS\\\\OneDrive\\\\Bureau\\\\react typescript todo\\\\modern-todo-app\\\\src\\\\components\\\\TodoList\\\\TodoList.tsx\"; // import React, { useEffect, useState } from 'react';\n// import NewItemForm from './components/NewItemForm';\n// import TodoItemComponent from './components/TodoItemComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos,\n  settodos\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), todos.filter(item => item.todo !== \"\") // Filter out items with empty todo\n    .map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item.todo\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }, this)) // Render list items for non-empty todos\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","TodoList","todos","settodos","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","todo","map","id","_c","$RefreshReg$"],"sources":["C:/Users/mikeS/OneDrive/Bureau/react typescript todo/modern-todo-app/src/components/TodoList/TodoList.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import NewItemForm from './components/NewItemForm';\r\n// import TodoItemComponent from './components/TodoItemComponent';\r\nimport { Todo } from '../../model';\r\n\r\ninterface Props {\r\n    todos: Todo[],\r\n    settodos:  React.Dispatch<React.SetStateAction<Todo[]>>\r\n}\r\n\r\nconst TodoList:React.FC<Props>= ({todos,settodos}) => {\r\n  \r\n  return (\r\n    <div>\r\n    <h2>Todo List:</h2>\r\n    {todos\r\n  .filter((item) => item.todo !== \"\") // Filter out items with empty todo\r\n  .map((item) => <li key={item.id}>{item.todo}</li>) // Render list items for non-empty todos\r\n}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"0IAAA;AACA;AACA;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAQA,MAAMC,QAAwB,GAAEA,CAAC;EAACC,KAAK;EAACC;AAAQ,CAAC,KAAK;EAEpD,oBACEH,OAAA;IAAAI,QAAA,gBACAJ,OAAA;MAAAI,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBN,KAAK,CACPO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,EAAE,CAAC,CAAC;IAAA,CACnCC,GAAG,CAAEF,IAAI,iBAAKV,OAAA;MAAAI,QAAA,EAAmBM,IAAI,CAACC;IAAI,GAAnBD,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,CAAC,CAAC;IAAA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5C,CAAC;AAEV,CAAC;AAAAM,EAAA,GAXKb,QAAwB;AAa9B,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}