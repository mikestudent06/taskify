{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikeS\\\\OneDrive\\\\Bureau\\\\modern-todo-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport InputField from './components/InputField.tsx/InputField';\nimport TodoList from './components/TodoList/TodoList';\n\n//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todo, settodo] = useState(\"\");\n  const [todos, settodos] = useState([]);\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(\"todos\");\n    if (storedTodos) {\n      settodos(JSON.parse(storedTodos));\n    }\n  }, []);\n  const handleAdd = e => {\n    e.preventDefault();\n    const updatedTodos = [...todos, {\n      id: todos.length > 0 ? todos[todos.length - 1].id + 1 : 1,\n      todo,\n      isDone: false\n    }];\n    settodos(updatedTodos);\n    // Save to local storage\n    localStorage.setItem('todos', JSON.stringify(updatedTodos));\n    settodo(\"\");\n  };\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taskify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      todo: todo,\n      settodo: settodo,\n      handleAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      settodos: settodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zIxnytqjE3ccwylPtJJ3GuztYPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","InputField","TodoList","jsxDEV","_jsxDEV","App","_s","todo","settodo","todos","settodos","storedTodos","localStorage","getItem","JSON","parse","handleAdd","e","preventDefault","updatedTodos","id","length","isDone","setItem","stringify","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikeS/OneDrive/Bureau/modern-todo-app/src/App.tsx"],"sourcesContent":["import React,{useEffect, useState} from 'react';\nimport './App.scss';\nimport InputField from './components/InputField.tsx/InputField';\nimport { Todo } from './model';\nimport TodoList from './components/TodoList/TodoList';\n\n//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\n\n\nconst App: React.FC = () => {\n  const [todo, settodo] = useState<string>(\"\");\n  const [todos, settodos] = useState<Todo[]>([])\n  \n  useEffect(() => {\n    const storedTodos = localStorage.getItem(\"todos\");\n    if (storedTodos) {\n      settodos(JSON.parse(storedTodos));\n    }\n  }, [])\n  \n  const handleAdd = (e: React.FormEvent<HTMLFormElement>) =>{\n    e.preventDefault();\n    const updatedTodos = [...todos, {id: todos.length > 0 ? todos[todos.length - 1].id + 1 : 1, todo, isDone: false}]\n    settodos(updatedTodos);\n    // Save to local storage\n    localStorage.setItem('todos', JSON.stringify(updatedTodos));\n    settodo(\"\");\n  }\n  console.log(todos);\n  \n\n  return (\n    <div className=\"App\">\n    <h1>Taskify</h1>\n    <InputField todo={todo} settodo={settodo} handleAdd={handleAdd}/>\n    <TodoList todos={todos} settodos={settodos}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/C,OAAO,YAAY;AACnB,OAAOC,UAAU,MAAM,wCAAwC;AAE/D,OAAOC,QAAQ,MAAM,gCAAgC;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAIC,CAAmC,IAAI;IACxDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,YAAY,GAAG,CAAC,GAAGV,KAAK,EAAE;MAACW,EAAE,EAAEX,KAAK,CAACY,MAAM,GAAG,CAAC,GAAGZ,KAAK,CAACA,KAAK,CAACY,MAAM,GAAG,CAAC,CAAC,CAACD,EAAE,GAAG,CAAC,GAAG,CAAC;MAAEb,IAAI;MAAEe,MAAM,EAAE;IAAK,CAAC,CAAC;IACjHZ,QAAQ,CAACS,YAAY,CAAC;IACtB;IACAP,YAAY,CAACW,OAAO,CAAC,OAAO,EAAET,IAAI,CAACU,SAAS,CAACL,YAAY,CAAC,CAAC;IAC3DX,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACDiB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;EAGlB,oBACEL,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBxB,OAAA;MAAAwB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB5B,OAAA,CAACH,UAAU;MAACM,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACQ,SAAS,EAAEA;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjE5B,OAAA,CAACF,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAA1B,EAAA,CA7BKD,GAAa;AAAA4B,EAAA,GAAb5B,GAAa;AA+BnB,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}