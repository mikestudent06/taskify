{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikeS\\\\OneDrive\\\\Bureau\\\\react typescript todo\\\\modern-todo-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.scss';\nimport InputField from './components/InputField.tsx/InputField';\n\n//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todo, settodo] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taskify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"A/zMAs0ZNbd7zdWFsLUQWmpZ37c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputField","jsxDEV","_jsxDEV","App","_s","todo","settodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikeS/OneDrive/Bureau/react typescript todo/modern-todo-app/src/App.tsx"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.scss';\nimport InputField from './components/InputField.tsx/InputField';\n\n//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\n\n\nconst App: React.FC = () => {\n  const [todo, settodo] = useState<string>(\"\")\n  return (\n    <div className=\"App\">\n    <h1>Taskify</h1>\n    <InputField/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,YAAY;AACnB,OAAOC,UAAU,MAAM,wCAAwC;;AAE/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC5C,oBACEG,OAAA;IAAKK,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBN,OAAA;MAAAM,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBV,OAAA,CAACF,UAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAAR,EAAA,CARKD,GAAa;AAAAU,EAAA,GAAbV,GAAa;AAUnB,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}