{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikeS\\\\OneDrive\\\\Bureau\\\\react typescript todo\\\\modern-todo-app\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport './App.scss';\n\n//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikeS/OneDrive/Bureau/react typescript todo/modern-todo-app/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './App.scss';\n\n//variables\n// const name:string = \"Michel\";\n// const age: number = 20;\n// const hobbies: string[] = [\"Web developer\", \"Graphic Designer\"];\n// let role : [string, number];\n// role= [\"dsc\",2]\n\n// const person : Person = {\n//   name: \"John\",\n//   age: 21,\n//   isAlive:true\n// };\n\n//Types:\n// type Person = {\n//   name: string,\n//   age: number,\n//   isAlive?:boolean;\n// };\n// let personArray: Person[]= [];\n// console.log(personArray);\n// let age: number |string;\n// age = 10 \n// console.log(age);\n\n//functions:\n// let printName: (name: string) => void;\n// let printAge: unknown;\n// let printPerson: (name: string) => never;\n\n//Difference bettween types and interfaces:\n// type X= {\n//   a:string,\n//   b:string\n// }\n\n// type Y=X & {\n//   c:string,\n//   d:string\n// }\n// let y: Y = {\n//   c:\"c\",\n//   d:\"d\",\n//   a:\"a\",\n//   b:\"b\",\n// }\n\n// interface X {\n//   a:string,\n//   b:string\n// }\n// interface Y extends X {\n//   c:string,\n//   d:string\n// }\n// interface Y extends Z {\n//   c:string,\n//   d:string\n// }\n// let y:Y = {\n//   c: \"c\",\n//   d: \"d\",\n//   a: \"a\",\n//   b: \"b\",\n//   e: \"e\",\n//   f: \"f\"\n// }\n// let x:X = {\n//   a: \"a\",\n//   b: \"b\",\n// }\n// type Z=X & {\n//   e: string,\n//   f:string\n// }\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA;IAAKE,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV,CAAC;AAAAC,EAAA,GANKN,GAAG;AAQT,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}